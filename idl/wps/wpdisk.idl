
/*
 * wpdisk.idl:
 *      beefed up SOM interface description file for the
 *      following classes built into the WPS:
 *
 *      --  WPDisk
 *
 *      XWorkplace uses this file instead of the respective
 *      file from whatever Toolkit you have installed to
 *      a) make SOM aware of our class replacements and
 *      b) allow us to override undocumented WPS methods.
 *      See idl\wps\readme.txt for details.
 */

/*
 *      Copyright (C) 2002-2003 Ulrich M”ller.
 *
 *      This file is part of the XWorkplace source package.
 *      XWorkplace is free software; you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published
 *      by the Free Software Foundation, in version 2 as it comes in the
 *      "COPYING" file of the XWorkplace main distribution.
 *      This program is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU General Public License for more details.
 */

#ifndef wpdisk_idl
#define wpdisk_idl

#include "wpabs.idl"
#include <somcls.idl>

interface WPRootFolder;

interface M_WPDisk;

interface WPDisk : WPAbstract
{
    ULONG wpAddDiskDetailsPage(in HWND hwndNotebook);

    ULONG wpQueryDriveLockStatus(in PULONG pulLockStatus,
                                 in PULONG pulLockCount);

    ULONG wpEjectDisk();

    ULONG wpLockDrive(in BOOL fLock);

    ULONG wpQueryLogicalDrive();

    WPRootFolder wpQueryRootFolder();

    BOOL wpSetCorrectDiskIcon();

//# new non-public Warp 3 methods hacked in for XWorkplace

    BOOL wpSetLogicalDrive(in ULONG ulLogicalDrive);

    BOOL wpSetDiskInfo();

    void wpTouchDisk();

//# Warp 4 has added no methods to WPDisk

#ifdef __SOMIDL__
    implementation
    {
        releaseorder:
            wpAddDiskDetailsPage,
            wpSetCorrectDiskIcon,
            wpQueryLogicalDrive,
            wpSetLogicalDrive,
            wpQueryRootFolder,
            wpSetDiskInfo,
            wpTouchDisk,
            wpQueryDiskInfo,
            wpQueryDriveLockStatus,
            wpEjectDisk,
            wpLockDrive;

        externalstem = wpdsk;
        local;
        externalprefix = dsk_;
        majorversion = 1;
        minorversion = 2;
        filestem = wpdisk;
        metaclass = M_WPDisk;
        callstyle = oidl;
        dllname = "pmwp.dll";
        passthru C_h =  ""
"#ifndef WPRootFolder"
"#define WPRootFolder SOMAny"
"#endif"
""
"#define OPEN_AUTO            120";

        wpSetup: override;
        wpSaveState: override;
        wpRestoreState: override;
        wpAddSettingsPages: override;
        wpMenuItemHelpSelected: override;
        wpMenuItemSelected: override;
        wpSetTitle: override;
        wpOpen: override;
        wpQueryDefaultHelp: override;
        wpDragOver: override;
        wpDrop: override;
        wpQueryIconData: override;
        wpSetIconData: override;
        wpViewObject: override;
        wpUnInitData: override;
        wpFilterMenu: override;
        wpModifyMenu: override;
        somDefaultInit: override;
        somDestruct: override;
        wpAddObjectWindowPage: override;
    };
#endif
};

interface M_WPDisk : M_WPAbstract
{
#ifdef __SOMIDL__
    implementation
    {
        externalstem = wpdsk;
        local;
        externalprefix = dskM_;
        majorversion = 1;
        minorversion = 2;
        filestem = wpdisk;
        callstyle = oidl;
        dllname = "pmwp.dll";

        wpclsQueryDefaultHelp: override;
        wpclsQueryIconData: override;
        wpclsQueryStyle: override;
        wpclsQueryTitle: override;
        wpclsQueryDefaultView: override;
    };
#endif
};
#endif
